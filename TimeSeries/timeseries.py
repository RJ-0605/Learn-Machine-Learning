# -*- coding: utf-8 -*-
"""TimeSeries.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VD5JKQdJBgVx6YuEXjvEo3zrFfZ302Ky
"""

!wget --no-check-certificate \
https://github.com/luthfi11/Learn-Machine-Learning/blob/master/TimeSeries/IOT-temp.csv?raw=true -O /tmp/dataset.csv

import pandas as pd
import numpy as np

data_train = pd.read_csv('/tmp/dataset.csv')
data_train['temp'] = data_train['temp'].astype(np.float32)
data_train.head()

data_train.isnull().sum()

import matplotlib.pyplot as plt

dates = data_train['noted_date'].values
temp  = data_train['temp'].values
 
plt.figure(figsize=(15,5))
plt.plot(dates, temp)
plt.title('Temperature', fontsize=20);

def windowed_dataset(series, window_size, batch_size, shuffle_buffer):
    series = tf.expand_dims(series, axis=-1)
    ds = tf.data.Dataset.from_tensor_slices(series)
    ds = ds.window(window_size + 1, shift=1, drop_remainder=True)
    ds = ds.flat_map(lambda w: w.batch(window_size + 1))
    ds = ds.shuffle(shuffle_buffer)
    ds = ds.map(lambda w: (w[:-1], w[-1:]))
    
    return ds.batch(batch_size).prefetch(1)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(dates, temp, test_size=0.2, shuffle=False)

print(min(y_train), max(y_train), (max(y_train)-min(y_train))*0.1)

import tensorflow as tf

train_set = windowed_dataset(y_train, window_size=60, batch_size=200, shuffle_buffer=1000)
validation_set = windowed_dataset(y_test, window_size=60, batch_size=200, shuffle_buffer=1000)

model = tf.keras.models.Sequential([
  tf.keras.layers.LSTM(60, return_sequences=True),
  tf.keras.layers.LSTM(60),
  tf.keras.layers.Dense(30, activation="relu"),
  tf.keras.layers.Dense(10, activation="relu"),
  tf.keras.layers.Dense(1),
])

optimizer = tf.keras.optimizers.SGD(lr=1.0000e-04, momentum=0.9)
model.compile(loss=tf.keras.losses.Huber(),
              optimizer=optimizer,
              metrics=["mae"])

history = model.fit(train_set, validation_data=validation_set, epochs=5)